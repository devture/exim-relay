name: Docker Image CI

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Script to get Exim package version and export it as step variable
      - name: Get version of the Exim package
        id: exim
        run: |
          export ALPINE_VERSION=$(grep 'FROM ' Dockerfile | cut -d':' -f2 | cut -d'.' -f1,2)
          curl -s https://raw.githubusercontent.com/alpinelinux/aports/${ALPINE_VERSION}-stable/community/exim/APKBUILD |grep '^pkg[ver|rel]' > .local.env
          . ./.local.env && echo "::set-output name=version::$(echo ${pkgver}-r${pkgrel})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.exim.outputs.version }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.exim.outputs.version }}-${{ steps.exim.outputs.sha_short }}
